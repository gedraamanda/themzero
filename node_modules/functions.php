<?php
//Includes
//include dirname(__FILE__) . '/componentes/category-componentes.php';

/*
 * Remove &nbsp dos posts;
*/
function remove_empty_lines( $content ){
    $content = preg_replace("/&nbsp;/", "", $content);
    return $content;
}
add_action('content_save_pre', 'remove_empty_lines');

/**
 * Thumbnails no wordpress
 */
add_theme_support( 'post-thumbnails' );
/**
 * Tamanhos das imagens para thumbs
 */
//add_image_size( 'thumb-card', 330, 248, true );

/**
 * Habilita o Title no wordpress
 */
add_theme_support( 'title-tag' );
/**
 * Remove scripts e estilos nativos do wordpress
 */
remove_action('wp_head', 'print_emoji_detection_script', 7);
remove_action('wp_print_styles', 'print_emoji_styles');

/**
 * Adiciona os estilos e scripts do tema
 */
function add_estilos_e_scripts() {
	// Estilos
	wp_enqueue_style( 'bootstrap', 'https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css' );
	wp_enqueue_style( 'css', get_template_directory_uri() . '/style.css');

	// Fontes
	wp_enqueue_style( 'fontbarlow', 'https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@300;400;500;600&display=swap');
	wp_enqueue_style( 'fontultra', 'https://fonts.googleapis.com/css2?family=Ultra&display=swap');

	// Scripts
	wp_deregister_script( 'jquery' );
	wp_enqueue_script( 'jquery', '//code.jquery.com/jquery-3.3.1.min.js', array(), '3.3.1', true );
	wp_enqueue_script( 'jquery');
    wp_enqueue_script( 'scripts', get_template_directory_uri() . '/scripts.js', array(), '', true );
}
add_action( 'wp_enqueue_scripts', 'add_estilos_e_scripts' );

function add_scripts_admin()
{
	if (is_admin()) {
		$componentes_version = filemtime(dirname(__FILE__) . '/style_admin.css');
		wp_enqueue_style('css', get_template_directory_uri() . '/style_admin.css', array(), $componentes_version);
	}
}
add_action('admin_init', 'add_scripts_admin');

/**
 * Adiciona div responsiva para oEmbeds
 */
function responsive_embed_html( $html, $url ) {
    if ( preg_match( '/youtube.com/', $url ) || preg_match( '/vimeo.com/', $url ) ) {
        return '<div class="videoWrapper">' . $html . '</div>';
    } else {
        return $html;
    }
}

add_filter( 'embed_oembed_html', 'responsive_embed_html', 10, 3 );
add_filter( 'video_embed_html', 'responsive_embed_html' );

/**
 * Remove o meta generator do Wordpress
 */
remove_action('wp_head', 'wp_generator');

/**
 * Posições de Menu
function register_my_menu() {
	register_nav_menu('header-menu',__( 'Header Menu' ));
}
add_action( 'init', 'register_my_menu' ); */

/**
 * Ajustes do admin bar
 */
add_action('wp_footer', 'preferencias_admin_bar');
function preferencias_admin_bar() {
    $op = '
    <style type="text/css">
        html {margin-top: 0px !important;}
        @media (max-width: 400px) {
            html {margin-top: 0 !important;}
            #wpadminbar {top: 0}
        }
    </style> ';
    echo $op;
}

add_filter( 'body_class','my_body_classes' );
function my_body_classes( $classes ) {
	if ( is_user_logged_in() ) {
		$classes[] = 'user-logg';
	}

	return $classes;
}

add_filter( 'allowed_block_types', 'mrk_allowed_block_types' );
function mrk_allowed_block_types( $allowed_blocks ) {
	return array(
		'core/image',
		'core/paragraph',
		'core/gallery',
        'core/quote',
        'acf/box',
        'acf/legenda-credito',
        'acf/capitulos',
        'core/heading',
        'core/separator',
        'core/spacer'
	);

}

//corrige imagens passado
add_shortcode('wp_caption', 'setti_removeWidthCaptionShortcode');
add_shortcode('caption', 'setti_removeWidthCaptionShortcode');
function setti_removeWidthCaptionShortcode($attr, $content = null) {
	if ( is_admin() ) {
		return;
	}

	$img_id = str_replace( 'attachment_', '', $attr['id'] );

	if (!isset($attr['caption'])) {
		if (preg_match('#((?:<a [^>]+>\s*)?<img [^>]+>(?:\s*</a>)?)(.*)#is', $content, $matches)) {
			$attr['caption'] = trim($matches[2]);
		}
	}

	$legenda = $attr['caption'];
	$credito = get_field( 'img_credito', $img_id );

	ob_start(); ?>

	<div class="single-content__image mb-4">
		<picture>
			<source media="(max-width: 799px)" srcset="<?php echo wp_get_attachment_image_src( $img_id, 'medium' )[0] ?>">
			<source media="(min-width: 800px)" srcset="<?php echo wp_get_attachment_image_src( $img_id, 'large' )[0] ?>">
			<img src="<?php echo wp_get_attachment_image_src( $img_id, 'large' )[0] ?>" alt="teste">
		</picture>

		<?php if ( ! empty( $legenda ) || ! empty( $credito ) ) { ?>
            <div class="image-detail border border-dark px-3 py-2 d-inline-block">
	            <?php
	            if ( ! empty( $legenda ) ) {
		            echo '<span class="legenda">' . $legenda . '</span>';
	            }

	            if ( ! empty( $credito ) ) {
		            echo '<span class="credito"> ' . $credito . '</span>';
	            }
	            ?>
            </div>
        <?php } ?>
    </div>
<?php
	return ob_get_clean();
}

function setti_image( $attr ) {
	$img_id = $attr['attrs']['id'];

    if (preg_match('/<figcaption>(.*?)<\/figcaption>/', $attr['innerHTML'], $matches)) {
        $legenda_out = $matches[1];
    }

	$credito = get_field( 'img_credito', $img_id );

	if ( $legenda_out != wp_get_attachment_caption( $img_id ) ) {
		$legenda = $legenda_out;
	} else {
		$legenda = wp_get_attachment_caption( $img_id );
	} ?>

    <div class="single-content__image mb-4">
        <picture>
            <source media="(max-width: 799px)" srcset="<?php echo wp_get_attachment_image_src( $img_id, 'medium' )[0] ?>">
            <source media="(min-width: 800px)" srcset="<?php echo wp_get_attachment_image_src( $img_id, 'large' )[0] ?>">
            <img src="<?php echo wp_get_attachment_image_src( $img_id, 'large' )[0] ?>" alt="teste">
        </picture>

		<?php if ( ! empty( $legenda ) || ! empty( $credito ) ) { ?>
            <div class="image-detail border border-dark px-3 py-2 d-inline-block">
				<?php
				if ( ! empty( $legenda ) ) {
					echo '<span class="legenda">' . $legenda . '</span>';
				}

				if ( ! empty( $credito ) ) {
					echo '<span class="credito"> ' . $credito . '</span>';
				}
				?>
            </div>
		<?php } ?>
    </div>

<?php }


function arphabet_widgets_init() {

	register_sidebar( array(
		'name' => 'Home right sidebar',
		'id' => 'home_right_1',
		'before_widget' => '<div>',
		'after_widget' => '</div>',
		'before_title' => '<h2 class="rounded">',
		'after_title' => '</h2>',
	) );
}
add_action( 'widgets_init', 'arphabet_widgets_init' );

//listagem de comentarios
function setticomment() {
	$args = array(
		'post_id' => get_the_ID(),
		'status' => 'approve',
		'orderby' => 'comment_date',
		'order' => 'DESC',
	);

	$commentsAll = get_comments( $args  );

	if ( ! empty( $commentsAll ) ) {
		foreach ( $commentsAll as $item ) {
		    $tam = strlen($item->comment_parent);

		    if ( $tam <= 1 ) { ?>
			    <div class="comment-int d-flex flex-column">
                    <div class="comment-block d-flex flex-column">
                        <div class="com-data">
                            <span class="d-inline-block text-uppercase nome"><?php echo $item->comment_author ?></span>
                            <span class="d-inline-block data">em <?php echo get_comment_date('d', $item->comment_ID). ' de '. get_comment_date("F", $item->comment_ID) . ' de ' . get_comment_date('Y', $item->comment_ID);?></span>
                        </div>

                        <div class="com-texto">
                            <p class="m-0">
	                            <?php echo $item->comment_content ?>
                            </p>
                        </div>

                        <?php
                        $reply = get_comments( array(
	                        'status'  => 'approve',
	                        'number'  => '5',
	                        'post_id' => get_the_ID(),
	                        'parent'  => $item->comment_ID

                        ) );

                        if ( ! empty( $reply ) ) {
	                        foreach ( $reply as $itemRep ) { ?>
                                <div class="com-reply mt-3">
                                    <p><?php echo $itemRep->comment_content ?></p>
                                    <span>Setti</span>
                                </div>
	                        <?php }
                        } ?>
                    </div>
                </div>
            <?php
		    }
        }

		echo '<a href="javascript:;" class="morecomments">VER + COMENTÁRIOS</a>';
    }
}

function setti_tweet_connection( $qtd ) {
	require_once('componentes/TwitterAPIExchange.php');

	$settings = array (
		'oauth_access_token' => "129701408-taCx3jYtVaFpnOC5Hg7M2WJ5aLhfWsNpI0iQv8NZ" ,
		'oauth_access_token_secret' => "zPS3Ew9lOggrxOw7BgCh7rUA7NCxjlAGG6jLOXaDJ6Z5k" ,
		'consumer_key' => "U2QPngHCZ6jOiujFm6PrHzpBB" ,
		'consumer_secret' => "SdNdUxnMN1C1JB3C6i9yI1baytSQ9mqKuhinMXVlZNM55lHCuL"
	);


	$url = "https://api.twitter.com/1.1/statuses/user_timeline.json";
	$requestMethod = "GET";
	$getfield = '?screen_name=ricardosetti&count='.$qtd;
	$twitter = new TwitterAPIExchange( $settings );

	$string = json_decode($twitter->setGetfield($getfield)->buildOauth($url, $requestMethod)->performRequest(),$assoc = TRUE);

	return $string;
}

function setti_convertTweet( $status, $targetBlank = true, $linkMaxLen = 250 ) {
	// the target
	$target = $targetBlank ? " target=\"_blank\" " : "";

	// convert link to url
	$status = preg_replace( '/\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[A-Z0-9+&@#\/%=~_|]/i', '<a href="\0" target="_blank">\0</a>', $status );

	// convert @ to follow
	$status = preg_replace( "/(@([_a-z0-9\-]+))/i", "<a href=\"http://twitter.com/$2\" title=\"Follow $2\" $target >$1</a>", $status );

	// convert # to search
	$status = preg_replace( "/(#([_a-z0-9\-]+))/i", "<a href=\"https://twitter.com/search?q=$2\" title=\"Search $1\" $target >$1</a>", $status );

	// return the status
	return $status;
}

function setti_convertTweetHour($a) {
	//get current timestampt
	$b = strtotime('now');
	//get timestamp when tweet created
	$c = strtotime($a);
	//get difference
	$d = $b - $c;
	//calculate different time values
	$minute = 60;
	$hour = $minute * 60;
	$day = $hour * 24;
	$week = $day * 7;

	if(is_numeric($d) && $d > 0) {
		//if less then 3 seconds
		if($d < 3) return __('agora',TP_RECENT_TEXT_DOMAIN);
		//if less then minute
		if($d < $minute) return floor($d) . __(' segundos atrás',TP_RECENT_TEXT_DOMAIN);
		//if less then 2 minutes
		if($d < $minute * 2) return __('cerca de 1 minuto atrás',TP_RECENT_TEXT_DOMAIN);
		//if less then hour
		if($d < $hour) return floor($d / $minute) . __(' minutos atrás',TP_RECENT_TEXT_DOMAIN);
		//if less then 2 hours
		if($d < $hour * 2) return __('cerca de 1 hora atrás',TP_RECENT_TEXT_DOMAIN);
		//if less then day
		if($d < $day) return floor($d / $hour) . __(' horas atrás',TP_RECENT_TEXT_DOMAIN);
		//if more then day, but less then 2 days
		if($d > $day && $d < $day * 2) return __('ontem',TP_RECENT_TEXT_DOMAIN);
		//if less then year
		if($d < $day * 365) return floor($d / $day) . __(' dias atrás',TP_RECENT_TEXT_DOMAIN);
		//else return more than a year
		return __('mais de um ano atrás',TP_RECENT_TEXT_DOMAIN);
	}
}

add_filter('comment_form_defaults', 'set_my_comment_title', 20);
function set_my_comment_title( $defaults ){
	$defaults['title_reply'] = __('DEIXE UM COMENTÁRIO', 'customizr-child');
	return $defaults;
}